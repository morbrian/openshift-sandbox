apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Crunchy PostgreSQL 
    iconClass: icon-database
    tags: database,postgresql,replication
  creationTimestamp: null
  name: pg-primary
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAMESPACE}-${PG_MODE}-data-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PG_DATA_STORAGE_SIZE}
    selector:
      matchLabels:
        postgres: ${NAMESPACE}-${PG_MODE}-data
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAMESPACE}-${PG_MODE}-wal-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PG_WAL_STORAGE_SIZE}
    selector:
      matchLabels:
        postgres: ${NAMESPACE}-${PG_MODE}-wal
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAMESPACE}-${PG_MODE}-log-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PG_LOG_STORAGE_SIZE}
    selector:
      matchLabels:
        postgres: ${NAMESPACE}-${PG_MODE}-log
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAMESPACE}-${PG_MODE}-backup-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PG_BACKUP_STORAGE_SIZE}
    selector:
      matchLabels:
        postgres: ${NAMESPACE}-${PG_MODE}-backup
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAMESPACE}-${PG_MODE}-backrestrepo-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${PG_BACKREST_STORAGE_SIZE}
    selector:
      matchLabels:
        postgres: ${NAMESPACE}-${PG_MODE}-backrestrepo
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: ${PG_SERVICE_NAME}
    name: ${PG_SERVICE_NAME}
  spec:
    ports:
    - nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: ${PG_SERVICE_NAME}
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${PG_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${PG_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 864001
      recreateParams:
        timeoutSeconds: 864000
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${PG_SERVICE_NAME}
          replicatype: trigger
      spec:
        nodeSelector:
          kubernetes.io/hostname: ${PG_NODE}
        containers:
        - env:
          - name: PG_PRIMARY_HOST
            value: ${PG_PRIMARY_SERVICE_NAME}
          - name: PGHOST
            value: /tmp
          - name: PG_PRIMARY_SERVICE_NAME
            value: ${PG_PRIMARY_SERVICE_NAME}
          - name: PG_PRIMARY_PORT
            value: "5432"
          - name: PG_MODE
            value: ${PG_MODE}
          - name: PGDATA_PATH_OVERRIDE
            value: ${PG_SERVICE_NAME}
          - name: PG_PRIMARY_USER
            valueFrom:
              secretKeyRef:
                key: pg-primary-username
                name: pg-secret
          - name: PG_PRIMARY_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pg-primary-password
                name: pg-secret
          - name: PG_USER
            valueFrom:
              secretKeyRef:
                key: pg-username
                name: pg-secret
          - name: PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pg-password
                name: pg-secret
          - name: PG_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pg-root-password
                name: pg-secret
          - name: PG_DATABASE
            value: ${PG_DATABASE}
          - name: BACKUP_PATH
            value: ${PG_RESTORE_PATH}
          - name: XLOGDIR
            value: 'true'
          image: ${CCP_IMAGE_PREFIX}/crunchy-postgres:${CCP_IMAGE_TAG}
          livenessProbe:
            exec:
              command:
              - /opt/cpm/bin/liveness.sh
            initialDelaySeconds: 40
            timeoutSeconds: 1
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /opt/cpm/bin/readiness.sh
            initialDelaySeconds: 40
            timeoutSeconds: 1
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /pgdata
            name: pgdata
            readOnly: false
          - mountPath: /pgwal
            name: pgwal
            readOnly: false
          - mountPath: /pglog
            name: pglog
            readOnly: false
          - mountPath: /backup
            name: backup
            readOnly: false
          - mountPath: /backrestrepo
            name: backrestrepo
            readOnly: false
          - mountPath: /pgconf
            name: pgconf
            readOnly: true
        - env:
          - name: PG_PORT
            value: "5432"
          - name: PROM_GATEWAY
            value: http://${CRUNCHY_METRICS_SERVICE_NAME}:9091
          - name: PG_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pg-root-password
                name: pg-secret
          - name: PG_PRIMARY_USER
            valueFrom:
              secretKeyRef:
                key: pg-primary-username
                name: pg-secret
          - name: PG_PRIMARY_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pg-primary-password
                name: pg-secret
          image: ${CCP_IMAGE_PREFIX}/crunchy-collect:${CCP_IMAGE_TAG}
          name: collect
          volumeMounts:
          - mountPath: /pgdata
            name: pgdata
            readOnly: true
        securityContext:
          supplementalGroups:
          - 65534
        volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: ${NAMESPACE}-${PG_MODE}-data-pvc
        - name: pgwal
          persistentVolumeClaim:
            claimName: ${NAMESPACE}-${PG_MODE}-wal-pvc
        - name: pglog
          persistentVolumeClaim:
            claimName: ${NAMESPACE}-${PG_MODE}-log-pvc
        - name: backup
          persistentVolumeClaim:
            claimName: ${NAMESPACE}-${PG_MODE}-backup-pvc
        - name: backrestrepo
          persistentVolumeClaim:
            claimName: ${NAMESPACE}-${PG_MODE}-backrestrepo-pvc
        - name: pgconf
          configMap:
            name: pgconf
            items:
            - key: pgconf
              path: postgresql.conf
            - key: pghba
              path: pg_hba.conf
            - key: setup
              path: setup.sql
            - key: pgbackrest
              path: pgbackrest.conf
parameters:
- description: project namespace
  name: NAMESPACE
  value: changeit
- description: The image prefix to use
  name: CCP_IMAGE_PREFIX
  value: crunchydata
- description: The image tag to use
  name: CCP_IMAGE_TAG
  value: centos7-10.2-1.8.0
- description: The name of the database that will be created
  name: PG_DATABASE
  value: sandbox
- description: Mode of postgres (replica or primary)
  name: PG_MODE
  value: primary
- description: The kubernetes node label where the primary database container should run.
  name: PG_NODE
  value: ocp-node-01.example.com
- name: PG_SERVICE_NAME
  value: pg-primary
- name: PG_PRIMARY_SERVICE_NAME
  value: pg-primary
- description: crunchy metrics service
  name: CRUNCHY_METRICS_SERVICE_NAME
  value: crunchy-metrics
- description: Requested size of data volume
  name: PG_DATA_STORAGE_SIZE
  value: 5Gi
- description: Requested size of wal volume
  name: PG_WAL_STORAGE_SIZE
  value: 3Gi
- description: Requested size of log volume
  name: PG_LOG_STORAGE_SIZE
  value: 2Gi
- description: Requested size of backup volume
  name: PG_BACKUP_STORAGE_SIZE
  value: 5Gi
- description: Requested size of backrest volume
  name: PG_BACKREST_STORAGE_SIZE
  value: 5Gi
- description: path offset for restore point when restoring from pbbackup
  name: PG_RESTORE_PATH
  value: skip
